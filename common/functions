# recursive content search
function search_content() {
	if [ "$#" -ne 2 ]; then
		echo "Usage : search_content [CONTENT] [PATH]"
		return
	fi
	grep --color=auto -rniw $2 -e $1
}

function extract_archive {
	if [ -z "$1" ]; then
		echo "Usage: extract_archive <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
	else
		if [ -f $1 ] ; then
			case $1 in
				*.tar.bz2)   tar xvjf $1    ;;
				*.tar.gz)    tar xvzf $1    ;;
				*.tar.xz)    tar xvJf $1    ;;
				*.lzma)      unlzma $1      ;;
				*.bz2)       bunzip2 $1     ;;
				*.rar)       unrar x -ad $1 ;;
				*.gz)        gunzip $1      ;;
				*.tar)       tar xvf $1     ;;
				*.tbz2)      tar xvjf $1    ;;
				*.tgz)       tar xvzf $1    ;;
				*.zip)       unzip $1       ;;
				*.Z)         uncompress $1  ;;
				*.7z)        7z x $1        ;;
				*.xz)        unxz $1        ;;
				*.exe)       cabextract $1  ;;
				*)           echo "extract: '$1' - unknown archive method" ;;
			esac
		else
			echo "$1 - file does not exist"
		fi
	fi
}

function backup() {
	if [ "$#" -lt 1 ]; then
		echo "Usage : backup [PATH..]"
		return
	fi
	for f in "$@"
	do
		cp -r "$f"{,.bak}
	done
}

function checksum() {
	if [ "$#" -lt 1 ]; then
		echo "Usage : checksum [FILE_PATH..]"
		return
	fi
	for f in "$@"
	do
		if [ -f $f ]; then
			sha1=`/usr/bin/openssl sha1 -sha1 ${f} | tr -s "=" | cut -d ' ' -f 2`
			sha256=`/usr/bin/openssl sha1 -sha256 ${f} | tr -s "=" | cut -d ' ' -f 2`
			sha512=`/usr/bin/openssl sha1 -sha512 ${f} | tr -s "=" | cut -d ' ' -f 2`
			md5=`/usr/bin/openssl sha1 -md5 ${f} | tr -s "=" | cut -d ' ' -f 2`
			echo "Checksum for file ${f}"
			echo "MD5    : ${md5}"
			echo "SHA1   : ${sha1}"
			echo "SHA256 : ${sha256}"
			echo "SHA512 : ${sha512}"
		else
			echo "File ${f} does not exist"
		fi
		echo "-----------------------------------"
	done
}

function = 
{
  echo "$@" | bc -l
}
