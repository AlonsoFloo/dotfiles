shell_interpretor=""

# Using BASH
if [ -n "$BASH_VERSION" ]; then
	# If not running interactively, don't do anything
	[ -z "$PS1" ] && return

	# reading the default bashrc
	if [ -r /etc/bashrc ] && [ -f /etc/bashrc ]; then
		  . /etc/bashrc
	fi

	shell_interpretor="bash"
fi

# Using ZSH
if [ -n "$ZSH_VERSION" ]; then
	# If not running interactively, don't do anything
	[ -z "$PROMPT" ] && return

	# reading the default bashrc
	if [ -r /etc/zsh/zshrc ] && [ -f /etc/zsh/zshrc ]; then
		. /etc/zsh/zshrc
	fi

	shell_interpretor="zsh"
fi

if [ "$shell_interpretor" != "" ]; then
	files=( "exports"
			"functions"
			"colors"
			"prompt"
			"aliases"
			"auto-complete"
			"extras"
			"hello" )

	# reading standard files
	for file in "${files[@]}"; do
		[ -r $DOTFILES/common/"$file" ] && [ -f $DOTFILES/common/"$file" ] && source $DOTFILES/common/"$file"
		[ -r $DOTFILES/${shell_interpretor}/"$file" ] && [ -f $DOTFILES/${shell_interpretor}/"$file" ] && source $DOTFILES/${shell_interpretor}/"$file"
	done;

	# reading host file
	file=$DOTFILES/byhost/`hostname`
	if [[ -r $file ]]; then
		[ -r "$file" ] && [ -f "$file" ] && source "$file"
	fi
	unset file files
fi

unset shell_interpretor

last_update=0
if [ -f ~/.dotfiles-update ]; then
	last_update="$(cat ~/.dotfiles-update)"
fi
current_day="$(($(date +%s) / 60 / 60 / 24))"
diff=`expr $current_day - $last_update`
if [ -z "$last_update" ] || [ $diff -ge 5 ]; then
	echo "Updating dotfiles ..."
	current_dir="$(pwd)"
	cd $DOTFILES && git pull --quiet origin master && git submodule --quiet foreach git pull --quiet origin master && cd "$current_dir"
	$DOTFILES/setup.sh --quiet
	echo "$current_day" > 	~/.dotfiles-update

	unset current_dir
fi
unset last_update current_day diff
